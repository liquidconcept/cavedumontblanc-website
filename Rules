#!/usr/bin/env ruby

require File.expand_path('../config/nanoc', __FILE__)

############ Compile ############

compile '/assets/stylesheets/*/' do
  filter :sprockets, {
    :css_compressor => Nanoc.production? ? :scss : nil
  }
end

compile '/assets/stylesheets/*/', :rep => :gzip do
  filter :sprockets, {
    :css_compressor => Nanoc.production? ? :scss : nil
  }
  filter :gzip
end

compile '/assets/javascripts/*/' do
  filter :sprockets, {
    :js_compressor => Nanoc.production? ? :uglifier : nil
  }
end

compile '/assets/javascripts/*/', :rep => :gzip do
  filter :sprockets, {
    :js_compressor => Nanoc.production? ? :uglifier : nil
  }
  filter :gzip
end

compile '*' do
  if item.binary?
    # donâ€™t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

############ Route ############

route '/assets/*/' do
  filename = File.basename(item[:filename]).gsub(/^(\w+\.\w+).*/, '\1')
  Nanoc::Helpers.asset_path(filename)
end

route '/assets/*/', :rep => :gzip do
  filename = File.basename(item[:filename]).gsub(/^(\w+\.\w+).*/, '\1')
  Nanoc::Helpers.asset_path(filename) + '.gz'
end

route '/htaccess/' do
  '/.htaccess'
end

route '*' do
  if item.children.size > 0 || item.identifier == '/'
    item.identifier + 'index.html'
  else
    item.identifier.gsub(/\/$/, '') + '.' + item[:extension]
  end
end

############ Layout ############

layout '*', :erb

